/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ie_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ie-fix */ "./js/utils/ie-fix.js");
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_header__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/header */ "./js/modules/header.js");
/* harmony import */ var _modules_css_background__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/css-background */ "./js/modules/css-background.js");
/* harmony import */ var _modules_css_background__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_modules_css_background__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _modules_main_promo_slider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/main-promo-slider */ "./js/modules/main-promo-slider.js");
/* harmony import */ var _modules_main_promo_slider__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_modules_main_promo_slider__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _modules_partners__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/partners */ "./js/modules/partners.js");
/* harmony import */ var _modules_partners__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_modules_partners__WEBPACK_IMPORTED_MODULE_5__);

 // import {initModals} from './modules/init-modals';

 // Utils
// ---------------------------------

Object(_utils_ie_fix__WEBPACK_IMPORTED_MODULE_0__["ieFix"])();
Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_1__["iosVhFix"])(); // Modules
// ---------------------------------
// initModals();

Object(_modules_header__WEBPACK_IMPORTED_MODULE_2__["setHeaderScripts"])();




/***/ }),

/***/ "./js/modules/css-background.js":
/*!**************************************!*\
  !*** ./js/modules/css-background.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var header = document.querySelector('header');
var headerContacts = header.querySelector('.header__contacts');
var promo = document.querySelector('.promo');

if (promo) {
  var promoBackground = document.querySelector('.promo__background');

  var setMainBackground = function setMainBackground() {
    var headerContactsProductLeft = headerContacts.getBoundingClientRect().left;
    promoBackground.style.setProperty('--backgroundMainWidth', window.innerWidth - headerContactsProductLeft + 'px');
  };

  setMainBackground();
  window.addEventListener('resize', function () {
    setMainBackground();
  });
}

var product = document.querySelector('.product');

if (product) {
  var productBackground = product.querySelector('.product__background');
  var productImage = product.querySelector('.product__image');

  var setProductBackground = function setProductBackground() {
    var productImageLeft = productImage.getBoundingClientRect().left;
    productBackground.style.setProperty('--backgroundProductWidth', productImageLeft + productImage.offsetWidth + 'px');
    var headerContactsProductLeft = headerContacts.getBoundingClientRect().left;
    productBackground.style.setProperty('--headerContactsProduct', window.innerWidth - headerContactsProductLeft + 20 + 'px');
  };

  setProductBackground();
  window.addEventListener('resize', function () {
    setProductBackground();
  });
}

var partners = document.querySelector('.partners');

if (partners) {
  var partnersBackground = document.querySelector('.partners__background');

  var setPartnersBackground = function setPartnersBackground() {
    var headerContactsProductLeft = headerContacts.getBoundingClientRect().left;
    partnersBackground.style.setProperty('--backgroundPartnersWidth', window.innerWidth - headerContactsProductLeft + 'px');
  };

  setPartnersBackground();
  window.addEventListener('resize', function () {
    setPartnersBackground();
  });
}

/***/ }),

/***/ "./js/modules/header.js":
/*!******************************!*\
  !*** ./js/modules/header.js ***!
  \******************************/
/*! exports provided: setHeaderScripts */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setHeaderScripts", function() { return setHeaderScripts; });
function isTouchDevice() {
  return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;
}

function setHeaderScripts() {
  var header = document.querySelector('.header');
  var mainNavElement = document.querySelector('.header .main-nav');
  var mainNavOpenElement = document.querySelector('.header .main-nav__open');
  var mainNavCloseElement = document.querySelector('.header .main-nav__close');
  var mainNavWrapperElement = document.querySelector('.header .main-nav__wrapper');
  var secondLevelWrapperElements = document.querySelectorAll('.header .main-nav__second-level-wrapper');
  var secondLevelItemElements = document.querySelectorAll('.header .main-nav__second-level-item');
  var thirdLevelLinks = document.querySelectorAll('.header .main-nav__third-level-link');
  var lastActiveSecondLevel = null;
  var activated = false;
  var thirdLevelTimer = null;
  var lastType = null;
  var ListenersTypes = {
    CLICK: 'click',
    HOVER: 'hover'
  };

  function determinListenersType() {
    if (isTouchDevice() || window.innerWidth < 768) {
      return ListenersTypes.CLICK;
    } else {
      return ListenersTypes.HOVER;
    }
  }

  function adjustHeight(secondLevelItemElement, reset) {
    var secondLevelListElement = secondLevelItemElement.closest('.main-nav__second-level-list');
    var thirdLevelLIstElement = secondLevelItemElement.querySelector('.main-nav__third-level-list');
    secondLevelListElement.style.minHeight = '0';

    if (thirdLevelLIstElement) {
      thirdLevelLIstElement.style.minHeight = '0';

      if (window.innerWidth >= 768 && !reset) {
        var seconLevelListHeight = secondLevelListElement.offsetHeight;
        var thirdLevelListHeight = thirdLevelLIstElement.offsetHeight;

        if (thirdLevelListHeight > seconLevelListHeight) {
          secondLevelListElement.style.minHeight = thirdLevelListHeight + 'px';
        } else {
          thirdLevelLIstElement.style.minHeight = seconLevelListHeight + 'px';
        }
      }
    }
  } // function resetSecondLevelHeight() {
  //   secondLevelWrapperElements.forEach(function (secondLevelWrapperElement) {
  //     const secondLevelListElement = secondLevelWrapperElement.querySelector('.main-nav__second-level-list');
  //     secondLevelListElement.style.minHeight = '0';
  //   });
  // }


  function procesShowThirdLevel(secondLevelItemElement) {
    if (secondLevelItemElement.classList.contains('main-nav__second-level-item--with-submenu')) {
      var secondLevelWrapperElement = secondLevelItemElement.closest('.main-nav__second-level-wrapper');
      secondLevelWrapperElement.classList.add('main-nav__second-level-wrapper--third-level-active');
      secondLevelItemElement.classList.add('main-nav__second-level-item--active');
      adjustHeight(secondLevelItemElement);
      lastActiveSecondLevel = secondLevelItemElement;
      activated = true;
    }
  }

  function hideThirdLevel(secondLevelItemElement) {
    var secondLevelWrapperElement = secondLevelItemElement.closest('.main-nav__second-level-wrapper');
    secondLevelWrapperElement.classList.remove('main-nav__second-level-wrapper--third-level-active');
    secondLevelItemElement.classList.remove('main-nav__second-level-item--active');
    adjustHeight(secondLevelItemElement, true);
  }

  function clickHandler(evt) {
    if (mainNavCloseElement === evt.target || mainNavCloseElement.contains(evt.target) || !(mainNavWrapperElement === evt.target || mainNavWrapperElement.contains(evt.target))) {
      mainNavElement.classList.remove('main-nav--mobile-active');
    }

    if (mainNavOpenElement === evt.target || mainNavOpenElement.contains(evt.target)) {
      mainNavElement.classList.add('main-nav--mobile-active');
    }

    secondLevelWrapperElements.forEach(function (secondLevelWrapperElement) {
      var firstLevelItemElement = secondLevelWrapperElement.closest('.main-nav__item');
      var firstLevelLinkElement = firstLevelItemElement.querySelector('.main-nav__link');

      if (firstLevelItemElement === evt.target || firstLevelItemElement.contains(evt.target)) {
        if ((firstLevelLinkElement === evt.target || firstLevelLinkElement.contains(evt.target)) && window.innerWidth >= 768) {
          evt.preventDefault();
        }

        secondLevelWrapperElement.classList.add('main-nav__second-level-wrapper--shown');
      } else {
        secondLevelWrapperElement.classList.remove('main-nav__second-level-wrapper--shown');
      }
    });
    secondLevelItemElements.forEach(function (secondLevelItemElement) {
      var secondLevelLinkElement = secondLevelItemElement.querySelector('.main-nav__second-level-link');
      var thirdLevelListElement = secondLevelItemElement.querySelector('.main-nav__third-level-list');

      if (secondLevelItemElement.classList.contains('main-nav__second-level-item--with-submenu') && (secondLevelLinkElement === evt.target || secondLevelLinkElement.contains(evt.target))) {
        evt.preventDefault();
      }

      if (thirdLevelListElement && (thirdLevelListElement === evt.target || thirdLevelListElement.contains(evt.target))) {
        activated = true;
      } else if ((secondLevelItemElement === evt.target || secondLevelItemElement.contains(evt.target)) && secondLevelItemElement !== lastActiveSecondLevel) {
        if (lastActiveSecondLevel) {
          hideThirdLevel(lastActiveSecondLevel);
        }

        procesShowThirdLevel(secondLevelItemElement);
      } else if (secondLevelItemElement === lastActiveSecondLevel) {
        hideThirdLevel(secondLevelItemElement);
      }
    });

    if (!activated) {
      lastActiveSecondLevel = null;
    }

    activated = false;
  }

  function setClickListeners() {
    document.addEventListener('click', clickHandler);
  }

  function removeClickListeners() {
    document.removeEventListener('click', clickHandler);
  }

  function setHoverListeners() {
    secondLevelItemElements.forEach(function (secondLevelItemElement) {
      secondLevelItemElement.onmouseenter = function () {
        if (thirdLevelTimer) {
          clearTimeout(thirdLevelTimer);
        }

        thirdLevelTimer = setTimeout(function () {
          if (lastActiveSecondLevel) {
            hideThirdLevel(lastActiveSecondLevel);
          }

          procesShowThirdLevel(secondLevelItemElement);
        }, 300);
      };

      secondLevelItemElement.onmouseleave = function () {
        if (thirdLevelTimer) {
          clearTimeout(thirdLevelTimer);
        }

        thirdLevelTimer = setTimeout(function () {
          if (lastActiveSecondLevel) {
            hideThirdLevel(lastActiveSecondLevel);
          }

          lastActiveSecondLevel = null;
        }, 300);
      };
    });
  }

  function removeHoverListeners() {
    secondLevelItemElements.forEach(function (secondLevelItemElement) {
      secondLevelItemElement.onmouseenter = null;
      secondLevelItemElement.onmouseleave = null;
    });
  }

  function setFocusListeners() {
    secondLevelWrapperElements.forEach(function (secondLevelWrapperElement) {
      var firstLevelItemElement = secondLevelWrapperElement.closest('.main-nav__item');
      var firstLevelLinkElement = firstLevelItemElement.querySelector('.main-nav__link');

      firstLevelLinkElement.onfocus = function () {
        secondLevelWrapperElement.classList.add('main-nav__second-level-wrapper--shown');
      };

      firstLevelLinkElement.onblur = function () {
        secondLevelWrapperElement.classList.remove('main-nav__second-level-wrapper--shown');
      };
    });
    secondLevelItemElements.forEach(function (secondLevelItemElement) {
      var secondLevelWrapperElement = secondLevelItemElement.closest('.main-nav__second-level-wrapper');
      var secondLevelLinkElement = secondLevelItemElement.querySelector('.main-nav__second-level-link');

      secondLevelLinkElement.onfocus = function () {
        secondLevelWrapperElement.classList.add('main-nav__second-level-wrapper--shown');
        procesShowThirdLevel(secondLevelItemElement);
      };

      secondLevelLinkElement.onblur = function () {
        secondLevelWrapperElement.classList.remove('main-nav__second-level-wrapper--shown');
        hideThirdLevel(secondLevelItemElement);
        lastActiveSecondLevel = null;
      };
    });
    thirdLevelLinks.forEach(function (thirdLevelLink) {
      var secondLevelWrapperElement = thirdLevelLink.closest('.main-nav__second-level-wrapper');
      var secondLevelItemElement = thirdLevelLink.closest('.main-nav__second-level-item');

      thirdLevelLink.onfocus = function () {
        secondLevelWrapperElement.classList.add('main-nav__second-level-wrapper--shown');
        procesShowThirdLevel(secondLevelItemElement);
      };

      thirdLevelLink.onblur = function () {
        secondLevelWrapperElement.classList.remove('main-nav__second-level-wrapper--shown');
        hideThirdLevel(secondLevelItemElement);
        lastActiveSecondLevel = null;
      };
    });
  }

  function removeFocusListeners() {
    var linkElements = header.querySelectorAll('.main-nav__link, .main-nav__second-level-link, .main-nav__third-level-link');
    linkElements.forEach(function (linkElement) {
      linkElement.onfocus = null;
      linkElement.onblur = null;
    });
  }

  function setListeners(type) {
    if (type === ListenersTypes.CLICK) {
      removeHoverListeners();
      removeFocusListeners();
      setClickListeners();
    } else if (type === ListenersTypes.HOVER) {
      removeClickListeners();
      setHoverListeners();
      setFocusListeners();
    }
  }

  if (header) {
    setListeners(determinListenersType());
    document.addEventListener('click', function (evt) {
      secondLevelWrapperElements.forEach(function (secondLevelWrapperElement) {
        if (!(secondLevelWrapperElement === evt.target || secondLevelWrapperElement.contains(evt.target))) {
          secondLevelWrapperElement.classList.remove('main-nav__second-level-wrapper--shown');
        }
      });
    });
    window.addEventListener('resize', function () {
      var type = determinListenersType();

      if (type !== lastType) {
        setListeners(type);
      }

      lastType = type;
    });
  }
}



/***/ }),

/***/ "./js/modules/main-promo-slider.js":
/*!*****************************************!*\
  !*** ./js/modules/main-promo-slider.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var promoSlider = document.querySelector('.promo__slider');

if (promoSlider) {
  var swiper = new Swiper('.swiper-container', {
    loop: true,
    speed: 600,
    autoplay: {
      delay: 5000,
      disableOnInteraction: false
    },
    navigation: {
      nextEl: '.promo__navigation .navigation-arrow--next',
      prevEl: '.promo__navigation .navigation-arrow--prev'
    }
  });
  window.addEventListener('resize', function () {
    swiper.update();
  });
}

/***/ }),

/***/ "./js/modules/partners.js":
/*!********************************!*\
  !*** ./js/modules/partners.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

function activatePartners() {
  var partnersElement = document.querySelector('.partners');
  var myMap = null;
  var lastActiveItem = null;

  function deactivatePartnersItem(itemElement) {
    itemElement.classList.remove('partners-list__item--active');
  }

  function activatePartnersItem(itemElement) {
    if (lastActiveItem) {
      deactivatePartnersItem(lastActiveItem);
    }

    itemElement.classList.add('partners-list__item--active');
    lastActiveItem = itemElement;
  }

  if (partnersElement) {
    var dealersButtonElement = partnersElement.querySelector('.partners__all-dealers-btn');
    var mapButtonElement = partnersElement.querySelector('.partners__map-btn');
    var itemElements = partnersElement.querySelectorAll('.partners-list__item');
    var arrowElements = partnersElement.querySelectorAll('.partners-list__arrow-button');
    var moreDetailsBackElements = partnersElement.querySelectorAll('.partners-list__more-details-back');
    var mapElement = partnersElement.querySelector('.partners__map');
    var headerElement = document.querySelector('.header');
    var buttonsElement = partnersElement.querySelector('.partners__main-buttons');
    var footerElement = document.querySelector('.footer');

    var initMap = function initMap() {
      myMap = new ymaps.Map('partners__map', {
        center: [+itemElements[0].dataset.xCoordinate, +itemElements[0].dataset.yCoordinate],
        zoom: 15
      });
      itemElements.forEach(function (itemElement) {
        myMap.geoObjects.add(new ymaps.Placemark([+itemElement.dataset.xCoordinate, +itemElement.dataset.yCoordinate], {
          balloonContent: itemElement.dataset.title
        }, {
          preset: 'islands#dotIcon',
          iconColor: '#f33131'
        }));
      });
    };

    ymaps.ready(initMap);

    dealersButtonElement.onclick = function () {
      mapButtonElement.classList.remove('partners__main-button--active');
      dealersButtonElement.classList.add('partners__main-button--active');
      mapElement.classList.remove('partners__map--mobile-shown');

      if (lastActiveItem) {
        deactivatePartnersItem(lastActiveItem);
        lastActiveItem = null;
      }
    };

    mapButtonElement.onclick = function () {
      dealersButtonElement.classList.remove('partners__main-button--active');
      mapButtonElement.classList.add('partners__main-button--active');
      mapElement.classList.add('partners__map--mobile-shown');
    };

    arrowElements.forEach(function (arrowElement) {
      var itemElement = arrowElement.closest('.partners-list__item');

      arrowElement.onclick = function () {
        if (itemElement !== lastActiveItem) {
          activatePartnersItem(itemElement);
          myMap.setCenter([+itemElement.dataset.xCoordinate, +itemElement.dataset.yCoordinate]);
        } else {
          deactivatePartnersItem(lastActiveItem);
          lastActiveItem = null;
        }
      };
    });
    moreDetailsBackElements.forEach(function (moreDetailsBackElement) {
      moreDetailsBackElement.onclick = function () {
        if (lastActiveItem) {
          deactivatePartnersItem(lastActiveItem);
          lastActiveItem = null;
        }
      };
    });

    var setListMapVariables = function setListMapVariables() {
      var headerHeight = headerElement ? headerElement.offsetHeight : 0;
      var buttonsHeight = buttonsElement ? buttonsElement.offsetHeight : 0;
      var totalTop = headerHeight + buttonsHeight;
      var footerHeight = footerElement ? footerElement.offsetHeight : 0;
      partnersElement.style.setProperty('--fixedTop', totalTop + 'px');
      partnersElement.style.setProperty('--footerHeight', footerHeight + 'px');
      partnersElement.style.setProperty('--buttonsHeight', buttonsHeight + 'px');
      partnersElement.style.setProperty('--headerHeight', headerHeight + 'px');
    };

    setListMapVariables();
    window.addEventListener('resize', setListMapVariables);
  }
}

activatePartners();

/***/ }),

/***/ "./js/utils/ie-fix.js":
/*!****************************!*\
  !*** ./js/utils/ie-fix.js ***!
  \****************************/
/*! exports provided: ieFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ieFix", function() { return ieFix; });
/* eslint-disable */
var ieFix = function ieFix() {
  // Polyfills
  //---------------------------------
  // forEach
  // CustomEvent
  // includes
  // matches
  // closest
  // prepend
  // append
  // before
  // remove
  // startsWith
  // forEach
  if (window.NodeList && !NodeList.prototype.forEach) {
    NodeList.prototype.forEach = function (callback, thisArg) {
      thisArg = thisArg || window;

      for (var i = 0; i < this.length; i++) {
        callback.call(thisArg, this[i], i, this);
      }
    };
  } // CustomEvent


  (function () {
    if (typeof window.CustomEvent === 'function') return false;

    function CustomEvent(event, params) {
      params = params || {
        bubbles: false,
        cancelable: false,
        detail: undefined
      };
      var evt = document.createEvent('CustomEvent');
      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
      return evt;
    }

    CustomEvent.prototype = window.Event.prototype;
    window.CustomEvent = CustomEvent;
  })(); // includes


  if (!Array.prototype.includes) {
    Object.defineProperty(Array.prototype, 'includes', {
      value: function value(searchElement, fromIndex) {
        if (this == null) {
          throw new TypeError('"this" is null or not defined');
        }

        var o = Object(this);
        var len = o.length >>> 0;

        if (len === 0) {
          return false;
        }

        var n = fromIndex | 0;
        var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);

        function sameValueZero(x, y) {
          return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);
        }

        while (k < len) {
          if (sameValueZero(o[k], searchElement)) {
            return true;
          }

          k++;
        }

        return false;
      }
    });
  } // matches


  if (!Element.prototype.matches) {
    Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {
      var matches = (this.document || this.ownerDocument).querySelectorAll(s);
      var i = matches.length; // eslint-disable-next-line no-empty

      while (--i >= 0 && matches.item(i) !== this) {}

      return i > -1;
    };
  } // closest


  if (!Element.prototype.matches) {
    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
  }

  if (!Element.prototype.closest) {
    Element.prototype.closest = function (s) {
      var el = this;

      do {
        if (el.matches(s)) {
          return el;
        }

        el = el.parentElement || el.parentNode;
      } while (el !== null && el.nodeType === 1);

      return null;
    };
  } // prepend


  (function (arr) {
    arr.forEach(function (item) {
      if (item.hasOwnProperty("prepend")) {
        return;
      }

      Object.defineProperty(item, "prepend", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function prepend() {
          // eslint-disable-next-line prefer-rest-params
          var argArr = Array.prototype.slice.call(arguments);
          var docFrag = document.createDocumentFragment();
          argArr.forEach(function (argItem) {
            var isNode = argItem instanceof Node;
            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
          });
          this.insertBefore(docFrag, this.firstChild);
        }
      });
    });
  })([Element.prototype, Document.prototype, DocumentFragment.prototype]); // append


  (function (arr) {
    arr.forEach(function (item) {
      if (item.hasOwnProperty("append")) {
        return;
      }

      Object.defineProperty(item, "append", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function append() {
          // eslint-disable-next-line prefer-rest-params
          var argArr = Array.prototype.slice.call(arguments);
          var docFrag = document.createDocumentFragment();
          argArr.forEach(function (argItem) {
            var isNode = argItem instanceof Node;
            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
          });
          this.appendChild(docFrag);
        }
      });
    });
  })([Element.prototype, Document.prototype, DocumentFragment.prototype]); // before


  (function (arr) {
    arr.forEach(function (item) {
      if (item.hasOwnProperty("before")) {
        return;
      }

      Object.defineProperty(item, "before", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function before() {
          // eslint-disable-next-line prefer-rest-params
          var argArr = Array.prototype.slice.call(arguments);
          var docFrag = document.createDocumentFragment();
          argArr.forEach(function (argItem) {
            var isNode = argItem instanceof Node;
            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
          });
          this.parentNode.insertBefore(docFrag, this);
        }
      });
    });
  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]); // remove


  (function (arr) {
    arr.forEach(function (item) {
      if (item.hasOwnProperty("remove")) {
        return;
      }

      Object.defineProperty(item, "remove", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function remove() {
          if (this.parentNode !== null) {
            this.parentNode.removeChild(this);
          }
        }
      });
    });
  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]); // startsWith


  if (!String.prototype.startsWith) {
    // eslint-disable-next-line no-extend-native
    Object.defineProperty(String.prototype, "startsWith", {
      value: function value(search, rawPos) {
        var pos = rawPos > 0 ? rawPos | 0 : 0;
        return this.substring(pos, pos + search.length) === search;
      }
    });
  } // Fixes
  //---------------------------------
  // ie download


  var ie11Download = function ie11Download(el) {
    if (el.href === "") {
      throw Error("The element has no href value.");
    }

    var filename = el.getAttribute("download");

    if (filename === null || filename === "") {
      var tmp = el.href.split("/");
      filename = tmp[tmp.length - 1];
    }

    el.addEventListener("click", function (evt) {
      evt.preventDefault();
      var xhr = new XMLHttpRequest();

      xhr.onloadstart = function () {
        xhr.responseType = "blob";
      };

      xhr.onload = function () {
        navigator.msSaveOrOpenBlob(xhr.response, filename);
      };

      xhr.open("GET", el.href, true);
      xhr.send();
    });
  };

  if (window.navigator.msSaveBlob) {
    var downloadLinks = document.querySelectorAll("a[download]");

    if (downloadLinks.length) {
      downloadLinks.forEach(function (el) {
        ie11Download(el);
      });
    }
  } // ie svg focus fix


  var unfocusableSvg = function unfocusableSvg() {
    if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
      return;
    }

    var svg = document.querySelectorAll('svg');
    svg.forEach(function (el) {
      el.setAttribute('focusable', 'false');
    });
  };

  unfocusableSvg(); //ie footer nailing

  var ieFooterNailing = function ieFooterNailing() {
    var main = document.querySelector('main');
    var header = document.querySelector('.header');
    var footer = document.querySelector('.footer');
    var headerH;
    var footerH;
    var mainHMin;

    if (!main || !(!!window.MSInputMethodContext && !!document.documentMode)) {
      return;
    }

    var mainHeight = function mainHeight() {
      // eslint-disable-next-line no-unused-expressions
      header ? headerH = header.getBoundingClientRect().height : headerH = 0; // eslint-disable-next-line no-unused-expressions

      footer ? footerH = footer.getBoundingClientRect().height : footerH = 0;
      mainHMin = window.innerHeight;
      main.style.minHeight = mainHMin - (headerH + footerH) + 'px';
    };

    document.addEventListener('loadDOMContentLoaded', mainHeight());
    window.addEventListener('resize', mainHeight);
  };

  ieFooterNailing();
};



/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/*! exports provided: iosVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function() { return iosVhFix; });
var isIos = function isIos() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (isIos()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};



/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map